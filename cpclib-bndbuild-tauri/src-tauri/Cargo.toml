cargo-features = ["profile-rustflags", "trim-paths"]

[package]
name = "cpclib-bndbuild-tauri"
version = "0.1.0"
description = "Tauri GUI of bndbuild"
authors = ["you"]
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
# The `_lib` suffix may seem redundant but it is necessary
# to make the lib name unique and wouldn't conflict with the bin name.
# This seems to be only an issue on Windows, see https://github.com/rust-lang/cargo/issues/8519
name = "bndbuild_tauri_lib"
crate-type = ["staticlib", "cdylib", "rlib"]


[build]
target-dir = "../../target"

[build-dependencies]
tauri-build = { version = "2", features = [] }

[target."cfg(windows)".build-dependencies]
ureq.workspace = true
zip-extract.workspace = true

[dependencies]
cpclib-bndbuild.workspace = true

camino = {workspace=true, features = ["serde1"] }
gag = "1.0.0"
log = "0.4"
serde = {workspace=true, features = ["derive"] }
serde_json = "1"
tauri = { version = "2", features = ["devtools"] }

tauri-plugin-dialog = "2"
tauri-plugin-fs = "2"
tauri-plugin-log = "2"
tauri-plugin-notification = "2"
tauri-plugin-opener = "2"
tauri-plugin-persisted-scope = "2"
tauri-plugin-shell = "2"
tauri-plugin-store = "2"
#tauri-plugin-devtools = "2.0.0"
#tauri-plugin-devtools-app = "2.0.0"


[target.'cfg(not(any(target_os = "android", target_os = "ios")))'.dependencies]
tauri-plugin-window-state = "2"


[profile.dev]
incremental = true # Compile your binary in smaller steps.
rustflags = ["-Zthreads=8"] # Better compile performance.


[profile.release]
codegen-units = 1 # Allows LLVM to perform better optimization.
lto = true # Enables link-time-optimizations.
opt-level = "s" # Prioritizes small binary size. Use `3` if you prefer speed.
panic = "abort" # Higher performance by disabling panic handlers.
strip = true # Ensures debug symbols are removed.
trim-paths = "all" # Removes potentially privileged information from your binaries.
rustflags = ["-Cdebuginfo=0", "-Zthreads=8"] # Better compile performance.

